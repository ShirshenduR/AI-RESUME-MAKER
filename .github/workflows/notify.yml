name: Notify Discord

on:
  workflow_dispatch:
  issues:
    types: [opened, closed]
  pull_request:
    types: [opened, closed]
  watch:
  fork:
  repository_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Send Discord Notification with Embed Preview
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          EVENT_NAME="${{ github.event_name }}"
          ACTION="${{ github.event.action }}"
          REPO="${{ github.repository }}"
          ACTOR="${{ github.actor }}"

          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_URL="${{ github.event.issue.html_url }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          REPO_URL="https://github.com/${REPO}"

          # Default embed values
          EMBED_TITLE="GitHub Notification"
          EMBED_DESC="New GitHub event in $REPO"
          EMBED_URL="$REPO_URL"
          EMBED_COLOR=7506394  # A blue-ish color

          if [[ "$EVENT_NAME" == "issues" ]]; then
            if [[ "$ACTION" == "opened" ]]; then
              EMBED_TITLE="üêõ New Issue Created"
              EMBED_DESC="**$ISSUE_TITLE** by **$ACTOR**"
              EMBED_URL="$ISSUE_URL"
            elif [[ "$ACTION" == "closed" ]]; then
              EMBED_TITLE="‚úÖ Issue Closed"
              EMBED_DESC="**$ISSUE_TITLE** by **$ACTOR**"
              EMBED_URL="$ISSUE_URL"
            fi
          elif [[ "$EVENT_NAME" == "pull_request" ]]; then
            if [[ "$ACTION" == "opened" ]]; then
              EMBED_TITLE="üì¶ New Pull Request"
              EMBED_DESC="**$PR_TITLE** by **$ACTOR**"
              EMBED_URL="$PR_URL"
            elif [[ "$ACTION" == "closed" ]]; then
              EMBED_TITLE="üîí Pull Request Closed"
              EMBED_DESC="**$PR_TITLE** by **$ACTOR**"
              EMBED_URL="$PR_URL"
            fi
          elif [[ "$EVENT_NAME" == "watch" ]]; then
            EMBED_TITLE="‚≠ê Repo Starred"
            EMBED_DESC="**$REPO** starred by **$ACTOR**"
            EMBED_URL="$REPO_URL"
          elif [[ "$EVENT_NAME" == "fork" ]]; then
            EMBED_TITLE="üç¥ Repo Forked"
            EMBED_DESC="**$REPO** forked by **$ACTOR**"
            EMBED_URL="$REPO_URL"
          fi

          # JSON payload with embed for Discord
          PAYLOAD=$(jq -n \
            --arg title "$EMBED_TITLE" \
            --arg description "$EMBED_DESC" \
            --arg url "$EMBED_URL" \
            --arg color "$EMBED_COLOR" \
            '{
              embeds: [
                {
                  title: $title,
                  description: $description,
                  url: $url,
                  color: ($color | tonumber)
                }
              ]
            }'
          )

          # Send to Discord webhook
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$PAYLOAD" \
               $DISCORD_WEBHOOK
